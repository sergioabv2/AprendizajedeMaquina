import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

data = pd.read_csv('datos.csv')
horas = data['horas_dedicadas']
notas = data['calificaciones_obtenida']

#Obtenemos mınimo, maximo, media y desviacion estandar de las horas dedicadas y las calificaciones obtenidas:
print('\nHORAS DEDICADAS\nMínimo:', horas.min(), '\nMáximo:', horas.max(), '\nMedia:', horas.mean(), '\nDesviación estándar:', horas.std())
print('\nCALIFICACIONES OBTENIDAS\nMínimo:', notas.min(), '\nMáximo:', notas.max(), '\nMedia:', notas.mean(), '\nDesviación estándar:', notas.std())

#Presentamos un gráfico de un analisis de regresión lineal de los datos:
X = np.array(horas)
y = np.array(notas.fillna(0))
X = X.reshape(-1, 1)
model = LinearRegression()
model.fit(X, y)
plt.scatter(X, y, color='blue', label='Datos Originales')
plt.plot(X, model.predict(X), color='red', linewidth=2, label='Modelo de Regresión')
plt.xlabel('Horas Dedicadas')
plt.ylabel('Calificaciones Obtenidas')
plt.show()

#Calculamos el coeficiente de determinacion del modelo para evaluar su efectividad
from sklearn.metrics import r2_score
predicciones = model.predict(X)
r2 = r2_score(y, predicciones)
print(f'Coeficiente de determinación (R²): {r2}')

#Hacemos una predicción de la calificación de un estudiante tomando como input la suma de los digitos de su número de cuenta modulo 50
num = input("Ingrese su número de cuenta: ")
n = sum(int(n) for n in num if n.isdigit()) % 50
prediccion = model.predict(np.array([[n]]))
print('Horas estudiadas: ', n,'\nCalificacion estimada: ', prediccion)


